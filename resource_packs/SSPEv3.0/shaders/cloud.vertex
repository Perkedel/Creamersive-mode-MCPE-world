// __multiversion__
// This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.

// SSPE BY @RyFol
// USE OF ANY CODE IS NOT PERMITTED

// To use centroid sampling we need to have version 300 es shaders, which requires changing:
// attribute to in
// varying to out when in vertex shaders or in when in fragment shaders
// defining an out vec4 FragColor and replacing uses of gl_FragColor with FragColor
// texture2D to texture
#if __VERSION__ >= 300
#define attribute in
#define varying out

#else


#endif

uniform MAT4 WORLDVIEWPROJ;
uniform MAT4 WORLD;
uniform float RENDER_DISTANCE;
uniform vec4 FOG_COLOR;
uniform vec4 CURRENT_COLOR;
uniform highp float TIME;

attribute mediump vec4 POSITION;
attribute vec4 COLOR;

varying vec4 color;

const float fogNear = 5.0;
const vec3 inverseLightDirection = vec3(0.52, 0.68, 0.0);
float optimal = 0.6;
float height = 14.0;
mat3 extension = mat3(0.0, 0.86, 0.11, 0.0, 0.0, 0.0, -1.50, 0.0, 4.0);

void main()
{
   
	  POS4 worldPos = WORLD * POSITION;
    POS4 vxyzw = POSITION;
    POS4 vxyz = POSITION;
    vxyzw.y += height;
    POS4 pos = WORLDVIEWPROJ * vxyzw;
 	   gl_Position = pos;

    vec3 cpos = vxyz.xyz * optimal;
    cpos *= extension;

   	float cloudWav = 0.0;
    cloudWav = sin((TIME * 0.33) + cpos.x * 4.0) + sin((TIME * 0.33) + cpos.z * 0.5) + sin((TIME * 0.33) + cpos.x * 5.9) + sin((TIME * 0.33) + cpos.z * 0.3) + sin((TIME * 0.33) + cpos.x * 0.85) + sin((TIME * 0.33) + cpos.z * 0.35) + sin((TIME * 0.33) + (cpos.x * 2.20) * (cpos.x * 4.1)) + sin((TIME * 0.33) + cpos.x * 0.4) + sin((TIME * 0.33) + cpos.x * 1.9) + sin((TIME * 0.33) + cpos.x * 7.3);

   vec4 dayColor = vec4( 0.5, 0.5, 0.5, CURRENT_COLOR.a );
   vec4 nightColor = CURRENT_COLOR + vec4(0.5, 0.8, 1.85, CURRENT_COLOR.a);
 	  color = mix(nightColor * dayColor, FOG_COLOR, COLOR.r );


 	float depth = length(worldPos.xyz) / 100.0;
 	float fog = max(depth - fogNear, 0.0);

 	color.a *= cloudWav;
  color.a *= 0.2 - fog;

  if(depth < 10.0 && depth > 5.0){color *= vec4(1.0, 1.0, 1.0, 0.035);}
}